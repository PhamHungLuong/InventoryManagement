/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppGUI;

import java.util.List;
import ClassConstructor.*;
import DAO.EmployeeDAO;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import HandleData.*;

/**
 *
 * @author cccccccccccccccccccc
 */
public class NhanVienGUI extends javax.swing.JInternalFrame {

    ArrayList<NhanVien> listStaffs;
    DefaultTableModel tableModel;
    int selectPosition = -1;

    public NhanVienGUI() {
        initComponents();
        this.listStaffs = new ArrayList<>();
//        this.listStaffs = IOfile.readNhanVien();
        this.listStaffs = EmployeeDAO.getInstance().selectAll();
        this.tableModel = (DefaultTableModel) this.staffTable.getModel();

        this.showListStaffs();
        this.staffTable.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                selectPosition = staffTable.getSelectedRow();
                System.out.println(selectPosition);
                idText.setText((String) tableModel.getValueAt(selectPosition, 0));
                nameText.setText((String) tableModel.getValueAt(selectPosition, 1));
                sexText.setText((String) tableModel.getValueAt(selectPosition, 2));
                homeText.setText((String) tableModel.getValueAt(selectPosition, 3));
                birthText.setText((String) tableModel.getValueAt(selectPosition, 4));
                userText.setText((String) tableModel.getValueAt(selectPosition, 5));
                passText.setText((String) tableModel.getValueAt(selectPosition, 6));
                positionText.setText((String) tableModel.getValueAt(selectPosition, 7));
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });

    }

    public void showListStaffs() {
        ArrayList<NhanVien> listNV = new ArrayList<>();
        for (int i = 0; i < this.listStaffs.size(); i++) {
            if (this.listStaffs.get(i).getActive().compareTo("onl") == 0) {
                listNV.add(this.listStaffs.get(i));
            }
        }
        this.tableModel.setRowCount(0);
        for (int i = 0; i < listNV.size(); i++) {
            this.tableModel.addRow(new Object[]{
                listNV.get(i).getID(),
                listNV.get(i).getHoTen(),
                listNV.get(i).getGioiTinh(),
                listNV.get(i).getQue(),
                listNV.get(i).getBirthDay(),
                listNV.get(i).getUser(),
                listNV.get(i).getPass(),
                listNV.get(i).getPosition(),});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        staffTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        sexText = new javax.swing.JTextField();
        addStaff = new javax.swing.JButton();
        updateStaff = new javax.swing.JButton();
        deleteStaff = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        seacrhStaff = new javax.swing.JButton();
        bạckToList = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        passText = new javax.swing.JTextField();
        userText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        positionText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        homeText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        birthText = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Quản lý nhân viên ");
        setPreferredSize(new java.awt.Dimension(1096, 731));

        jLabel1.setText("                 Danh sách nhân viên ");

        staffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Họ và tên", "Giới tính", "Quê quán", "Ngày sinh", "Tài khoản", "Mật khẩu", "Vị trí"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(staffTable);
        if (staffTable.getColumnModel().getColumnCount() > 0) {
            staffTable.getColumnModel().getColumn(0).setResizable(false);
            staffTable.getColumnModel().getColumn(1).setResizable(false);
            staffTable.getColumnModel().getColumn(2).setResizable(false);
            staffTable.getColumnModel().getColumn(4).setResizable(false);
            staffTable.getColumnModel().getColumn(5).setResizable(false);
            staffTable.getColumnModel().getColumn(6).setResizable(false);
            staffTable.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel2.setText("ID:");

        jLabel3.setText("Họ và tên:");

        jLabel4.setText("Giới tính");

        addStaff.setText("Thêm NV");
        addStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStaffActionPerformed(evt);
            }
        });

        updateStaff.setText("Cập nhật NV");
        updateStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStaffActionPerformed(evt);
            }
        });

        deleteStaff.setText("Xóa NV");
        deleteStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStaffActionPerformed(evt);
            }
        });

        jLabel5.setText("Tìm kiếm:");

        seacrhStaff.setText("Tìm");
        seacrhStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seacrhStaffActionPerformed(evt);
            }
        });

        bạckToList.setText("Trở về DS");
        bạckToList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bạckToListActionPerformed(evt);
            }
        });

        jLabel6.setText("Tài khoản");

        jLabel7.setText("Mật khẩu:");

        jLabel8.setText("Chức vụ");

        jLabel9.setText("Quê quán");

        jLabel10.setText("Ngày sinh");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(406, 406, 406))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1008, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel6))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(3, 3, 3)))
                    .addComponent(jLabel8))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(positionText, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idText, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                            .addComponent(nameText)
                            .addComponent(sexText)
                            .addComponent(userText)
                            .addComponent(homeText)
                            .addComponent(birthText))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(seacrhStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bạckToList)
                                .addGap(89, 89, 89))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(updateStaff)
                                    .addComponent(addStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(seacrhStaff)
                                            .addComponent(bạckToList))
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addGap(8, 8, 8)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sexText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(homeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(addStaff)
                                .addGap(18, 18, 18)
                                .addComponent(updateStaff)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteStaff)
                            .addComponent(birthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(positionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(137, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStaffActionPerformed
        if (this.idText.getText().length() == 0 || this.nameText.getText().length() == 0 || this.sexText.getText().length() == 0 || this.homeText.getText().length() <= 0 || this.birthText.getText().length() <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Nhập đầy đủ các ô trống !");
        } else {
            NhanVien newStaff = new NhanVien(this.idText.getText(), this.nameText.getText(), this.sexText.getText(), this.homeText.getText(), this.birthText.getText(), this.userText.getText(), this.passText.getText(), this.positionText.getText(), "onl");
            String checked = "";
            if (newStaff.getPosition().compareTo("Quản lý") != 0 && newStaff.getPosition().compareTo("Nhân viên") != 0) {
                checked = "Failure to create";
            }
            for (int i = 0; i < this.listStaffs.size(); i++) {
                if (newStaff.getID().compareTo(this.listStaffs.get(i).getID()) == 0) {
                    checked = "Failure to create";
                }
            }
            if (checked.compareTo("Failure to create") != 0) {
                this.listStaffs.add(newStaff);
                EmployeeDAO.getInstance().Add(newStaff);
//                IOfile.writeNhanVien(this.listStaffs);
                this.showListStaffs();

                this.idText.setText("");
                this.nameText.setText("");
                this.sexText.setText("");
                this.birthText.setText("");
                this.homeText.setText("");
                this.userText.setText("");
                this.passText.setText("");
                this.positionText.setText("");
                JOptionPane.showMessageDialog(rootPane, "Thêm nhân viên thành công !");
            } else {
                JOptionPane.showMessageDialog(rootPane, "ID đã tồn tại !");
            }
        }
    }//GEN-LAST:event_addStaffActionPerformed

    private void updateStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStaffActionPerformed
        if (this.selectPosition == -1) {
            JOptionPane.showMessageDialog(rootPane, "Chọn nhân viên muốn cập nhật !");
        } else {
            int position = -1;
            for (int i = 0; i < this.listStaffs.size(); i++) {
                if (this.idText.getText().compareTo(this.listStaffs.get(i).getID()) == 0) {
                    position = i;
                    break;
                }
            }
//            NhanVien newStaff = new NhanVien(this.idText.getText(), this.nameText.getText(), this.sexText.getText(), this.homeText.getText(), this.birthText.getText(), this.userText.getText(), this.passText.getText(), this.positionText.getText(), "onl");
            this.listStaffs.get(position).changeInforStaff(this.nameText.getText(), this.sexText.getText(), this.homeText.getText(), this.birthText.getText(), this.userText.getText(), this.passText.getText(), this.positionText.getText());
//            IOfile.writeNhanVien(this.listStaffs);
            EmployeeDAO.getInstance().Update(this.listStaffs.get(position));
            this.selectPosition = -1;

            this.idText.setText("");
            this.nameText.setText("");
            this.sexText.setText("");
            this.sexText.setText("");
            this.birthText.setText("");
            this.homeText.setText("");
            this.userText.setText("");
            this.passText.setText("");
            this.positionText.setText("");
            this.showListStaffs();
            JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công !");
        }
    }//GEN-LAST:event_updateStaffActionPerformed

    private void deleteStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStaffActionPerformed
        if (this.selectPosition == -1) {
            JOptionPane.showMessageDialog(rootPane, "Chọn nhân viên muốn xóa !");
        } else {
            int result = JOptionPane.showConfirmDialog(rootPane, "Bạn có chác muốn xóa nhân viên này ?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (result == JOptionPane.YES_OPTION) {
                int position = -1;
                for (int i = 0; i < this.listStaffs.size(); i++) {
                    if (this.idText.getText().compareTo(this.listStaffs.get(i).getID()) == 0) {
                        position = i;
                    }
                }
//                NhanVien newStaff = new NhanVien(this.idText.getText(), this.nameText.getText(), this.sexText.getText(), this.homeText.getText(), this.birthText.getText(), this.userText.getText(), this.passText.getText(), this.positionText.getText(), "off");
//                this.listStaffs.get(position).setActive("offline");
//                IOfile.writeNhanVien(listStaffs);
                EmployeeDAO.getInstance().Delete(this.listStaffs.get(position));
                this.listStaffs.remove(position);
                this.selectPosition = -1;
                this.idText.setText("");
                this.nameText.setText("");
                this.sexText.setText("");
                this.sexText.setText("");
                this.birthText.setText("");
                this.homeText.setText("");
                this.userText.setText("");
                this.passText.setText("");
                this.positionText.setText("");
                this.showListStaffs();
                JOptionPane.showMessageDialog(rootPane, "Xóa thành công !");

            }
            if (result == JOptionPane.NO_OPTION) {
                this.selectPosition = -1;
                this.idText.setText("");
                this.nameText.setText("");
                this.sexText.setText("");
                this.sexText.setText("");
                this.birthText.setText("");
                this.homeText.setText("");
                this.userText.setText("");
                this.passText.setText("");
                this.positionText.setText("");
            }
        }
    }//GEN-LAST:event_deleteStaffActionPerformed

    private void seacrhStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seacrhStaffActionPerformed
        if (this.searchText.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Nhập tên nhân viên muốn tìm kiếm");
        } else {
            ArrayList<NhanVien> newList = new ArrayList<>();
            for (int i = 0; i < this.listStaffs.size(); i++) {
                if (this.listStaffs.get(i).getHoTen().indexOf(this.searchText.getText()) != -1) {
                    newList.add(this.listStaffs.get(i));
                }
            }
            this.tableModel.setRowCount(0);
            for (int i = 0; i < newList.size(); i++) {
                this.tableModel.addRow(new Object[]{
                    newList.get(i).getID(),
                    newList.get(i).getHoTen(),
                    newList.get(i).getGioiTinh(),
                    newList.get(i).getQue(),
                    newList.get(i).getBirthDay(),
                    newList.get(i).getUser(),
                    newList.get(i).getPass(),
                    newList.get(i).getPosition(),});
            }
        }
    }//GEN-LAST:event_seacrhStaffActionPerformed

    private void bạckToListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bạckToListActionPerformed
        this.showListStaffs();
        this.searchText.setText("");
    }//GEN-LAST:event_bạckToListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStaff;
    private javax.swing.JTextField birthText;
    private javax.swing.JButton bạckToList;
    private javax.swing.JButton deleteStaff;
    private javax.swing.JTextField homeText;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField passText;
    private javax.swing.JTextField positionText;
    private javax.swing.JButton seacrhStaff;
    private javax.swing.JTextField searchText;
    private javax.swing.JTextField sexText;
    private javax.swing.JTable staffTable;
    private javax.swing.JButton updateStaff;
    private javax.swing.JTextField userText;
    // End of variables declaration//GEN-END:variables
}
