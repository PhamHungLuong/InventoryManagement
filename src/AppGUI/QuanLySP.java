/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppGUI;

import ClassConstructor.*;
import DAO.AreaDAO;
import DAO.ClothesDAO;
import DAO.Detail_Imp_inv_DAO;
import DAO.GroupClothesDAO;
import HandleData.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cccccccccccccccccccc
 */
public class QuanLySP extends javax.swing.JInternalFrame {

    ArrayList<Clothes> listClothes;
    DefaultTableModel tableModel;
    int selectPosition = -1;

    public QuanLySP() {
        initComponents();
        this.listClothes = new ArrayList<>();
//        this.listClothes = IOfile.readClothes();
        this.listClothes = ClothesDAO.getInstance().selectAll();
        this.tableModel = (DefaultTableModel) productTable.getModel();

        this.showListProduct();

        this.productTable.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                selectPosition = productTable.getSelectedRow();
                idText.setText((String) tableModel.getValueAt(selectPosition, 0).toString());
                nameProText.setText((String) tableModel.getValueAt(selectPosition, 1));
                colorProText.setText((String) tableModel.getValueAt(selectPosition, 2));
                sizeProText.setText((String) tableModel.getValueAt(selectPosition, 3));
                priceProText.setText((String) tableModel.getValueAt(selectPosition, 4).toString());
                oldPriceProText.setText((String) tableModel.getValueAt(selectPosition, 7).toString());
                districtProText.setText((String) tableModel.getValueAt(selectPosition, 5));
                numberProText.setText((String) tableModel.getValueAt(selectPosition, 6).toString());
                groupText.setText((String) tableModel.getValueAt(selectPosition, 8));
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

        });
    }

//    public void showListProduct() {
//        this.tableModel.setRowCount(0);
//        for (int i = 0; i < ClothesDAO.getInstance().selectAll().size(); i++) {
//            this.tableModel.addRow(new Object[]{
//                ClothesDAO.getInstance().selectAll().get(i).getId(),
//                ClothesDAO.getInstance().selectAll().get(i).getTenSP(),
//                ClothesDAO.getInstance().selectAll().get(i).getMau(),
//                ClothesDAO.getInstance().selectAll().get(i).getSize(),
//                ClothesDAO.getInstance().selectAll().get(i).getGiaBan(),
//                ClothesDAO.getInstance().selectAll().get(i).getNameDistrict(AreaDAO.getInstance().selectAll()),
//                ClothesDAO.getInstance().selectAll().get(i).getSLHienTai(),
//                ClothesDAO.getInstance().selectAll().get(i).getGiaGoc(),
//                ClothesDAO.getInstance().selectAll().get(i).getNameGroup(GroupClothesDAO.getInstance().selectAll()),});
//        }
//    }
    public void showListProduct() {
        this.tableModel.setRowCount(0);
        for (int i = 0; i < this.listClothes.size(); i++) {
            this.tableModel.addRow(new Object[]{
                this.listClothes.get(i).getId(),
                this.listClothes.get(i).getTenSP(),
                this.listClothes.get(i).getMau(),
                this.listClothes.get(i).getSize(),
                this.listClothes.get(i).getGiaBan(),
                this.listClothes.get(i).getNameDistrict(AreaDAO.getInstance().selectAll()),
                ClothesDAO.getInstance().selectAll().get(i).getSLHienTai(),
                this.listClothes.get(i).getGiaGoc(),
                this.listClothes.get(i).getNameGroup(GroupClothesDAO.getInstance().selectAll()),});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        nameProText = new javax.swing.JTextField();
        colorProText = new javax.swing.JTextField();
        sizeProText = new javax.swing.JTextField();
        priceProText = new javax.swing.JTextField();
        districtProText = new javax.swing.JTextField();
        numberProText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        groupText = new javax.swing.JTextField();
        addPro = new javax.swing.JButton();
        updatePro = new javax.swing.JButton();
        deletePro = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        searchPro = new javax.swing.JButton();
        backToList = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        oldPriceProText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Quản lý sản phẩm");
        setPreferredSize(new java.awt.Dimension(1096, 731));

        jLabel1.setText("                  Quản lý danh mục sản phẩm");

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên sản phẩm", "Màu", "Kích cỡ", "Giá", "Khu vực", "Số lượng còn lại", "Giá gốc", "Nhóm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productTable);
        if (productTable.getColumnModel().getColumnCount() > 0) {
            productTable.getColumnModel().getColumn(0).setResizable(false);
            productTable.getColumnModel().getColumn(1).setResizable(false);
            productTable.getColumnModel().getColumn(2).setResizable(false);
            productTable.getColumnModel().getColumn(3).setResizable(false);
            productTable.getColumnModel().getColumn(4).setResizable(false);
            productTable.getColumnModel().getColumn(5).setResizable(false);
            productTable.getColumnModel().getColumn(6).setResizable(false);
            productTable.getColumnModel().getColumn(7).setResizable(false);
            productTable.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel2.setText("ID:");

        jLabel3.setText("Tên SP:");

        jLabel4.setText("Màu:");

        jLabel5.setText("Size:");

        jLabel6.setText("Giá bán:");

        jLabel7.setText("Khu vực:");

        jLabel8.setText("Số lượng còn lại:");

        nameProText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameProTextActionPerformed(evt);
            }
        });

        sizeProText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeProTextActionPerformed(evt);
            }
        });

        numberProText.setEditable(false);

        jLabel9.setText("Nhóm:");

        addPro.setText("Thêm  SP");
        addPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProActionPerformed(evt);
            }
        });

        updatePro.setText("Cập nhật SP");
        updatePro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProActionPerformed(evt);
            }
        });

        deletePro.setText("Xóa SP");
        deletePro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProActionPerformed(evt);
            }
        });

        jLabel10.setText("Tìm kiếm SP");

        searchPro.setText("Tìm ");
        searchPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchProActionPerformed(evt);
            }
        });

        backToList.setText("Reset DS");
        backToList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToListActionPerformed(evt);
            }
        });

        jLabel11.setText("Giá gốc:");

        jButton1.setText("DSSP sắp hết");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(363, 363, 363))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 891, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(82, 82, 82)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel11))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberProText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(groupText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(253, 253, 253)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchPro, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(backToList))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameProText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(colorProText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sizeProText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(priceProText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(districtProText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(oldPriceProText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(updatePro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addPro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deletePro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(148, 148, 148))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPro)
                    .addComponent(backToList))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nameProText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPro))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(colorProText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(sizeProText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(updatePro)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(priceProText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(oldPriceProText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(deletePro)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(districtProText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(numberProText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(groupText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameProTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameProTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameProTextActionPerformed

    private void sizeProTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeProTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeProTextActionPerformed

    private void updateProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProActionPerformed
        if (this.selectPosition == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn vật phẩm muốn cập nhật !");
        } else {
            String checked = "";
            int idNhom = 0;
            for (int i = 0; i < GroupClothesDAO.getInstance().selectAll().size(); i++) {
                if (this.groupText.getText().compareTo(GroupClothesDAO.getInstance().selectAll().get(i).getName()) == 0) {
                    checked = "Success";
                    idNhom = GroupClothesDAO.getInstance().selectAll().get(i).getID();
                    break;
                }
            }
            int idArena = 0;
            for (int i = 0; i < AreaDAO.getInstance().selectAll().size(); i++) {
                if (this.districtProText.getText().compareTo(AreaDAO.getInstance().selectAll().get(i).getName()) == 0) {
                    idArena = AreaDAO.getInstance().selectAll().get(i).getID();
                }
            }
            if (checked.compareTo("Success") == 0 && idArena != 0) {
                int index = -1;
                for (int i = 0; i < this.listClothes.size(); i++) {
                    if (Integer.parseInt(this.idText.getText()) == this.listClothes.get(i).getId()) {
                        index = i;
                        break;
                    }
                }

                this.listClothes.get(index).changeInforOfProduct(this.nameProText.getText(), this.sizeProText.getText(), this.colorProText.getText(), Integer.parseInt(this.priceProText.getText()), Integer.parseInt(this.oldPriceProText.getText()), idArena, this.groupText.getText());
//                IOfile.writeClothes(this.listClothes);
//                Clothes newProduct = new Clothes(Integer.parseInt(this.idText.getText()), this.nameProText.getText(), this.sizeProText.getText(), this.colorProText.getText(), Integer.parseInt(this.priceProText.getText()), Integer.parseInt(this.oldPriceProText.getText()), idArena, idNhom);
                ClothesDAO.getInstance().Update(this.listClothes.get(index));
                this.showListProduct();
                this.selectPosition = -1;

                this.idText.setText("");
                this.nameProText.setText("");
                this.sizeProText.setText("");
                this.colorProText.setText("");
                this.priceProText.setText("");
                this.oldPriceProText.setText("");
                this.districtProText.setText("");
                this.groupText.setText("");

                JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công !");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Nhóm sản phẩm hoặc khu vực không tồn tại !");
            }
        }
    }//GEN-LAST:event_updateProActionPerformed

    private void addProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProActionPerformed
        if (this.idText.getText().length() == 0 || this.nameProText.getText().length() == 0 || this.colorProText.getText().length() == 0 || this.sizeProText.getText().length() == 0 || this.priceProText.getText().length() == 0 || this.oldPriceProText.getText().length() == 0 || this.districtProText.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Nhập đầy đủ thông tin ô trống !");
        } else {
            int idNhom = 0;
            for (int i = 0; i < GroupClothesDAO.getInstance().selectAll().size(); i++) {
                if (this.groupText.getText().compareTo(GroupClothesDAO.getInstance().selectAll().get(i).getName()) == 0) {
                    idNhom = GroupClothesDAO.getInstance().selectAll().get(i).getID();
                }
            }
            int idArena = 0;
            for (int i = 0; i < AreaDAO.getInstance().selectAll().size(); i++) {
                if (this.districtProText.getText().compareTo(AreaDAO.getInstance().selectAll().get(i).getName()) == 0) {
                    idArena = AreaDAO.getInstance().selectAll().get(i).getID();
                }
            }
            Clothes newProduct = new Clothes(Integer.parseInt(this.idText.getText()), this.nameProText.getText(), this.sizeProText.getText(), this.colorProText.getText(), Integer.parseInt(this.priceProText.getText()), Integer.parseInt(this.oldPriceProText.getText()), 0, idArena, idNhom);
            String checkedClothe = "";
            for (int i = 0; i < this.listClothes.size(); i++) {
                if (newProduct.getId() == this.listClothes.get(i).getId()) {
                    checkedClothe = "Failure";
                    break;
                }
            }
            if (checkedClothe.compareTo("Failure") != 0 && newProduct.getIdNhom() != 0 && newProduct.getIdDistrict() != 0) {
                this.listClothes.add(newProduct);
//                IOfile.writeClothes(this.listClothes);
                ClothesDAO.getInstance().Add(newProduct);
                this.showListProduct();

                this.idText.setText("");
                this.nameProText.setText("");
                this.sizeProText.setText("");
                this.colorProText.setText("");
                this.priceProText.setText("");
                this.oldPriceProText.setText("");
                this.districtProText.setText("");
                this.groupText.setText("");

                JOptionPane.showMessageDialog(rootPane, "Thêm sản phẩm thành công");
            } else {
                JOptionPane.showMessageDialog(rootPane, "ID đã tồn tại hoặc nhóm sản phâm,khu vực không phù hợp !");
            }
        }
    }//GEN-LAST:event_addProActionPerformed

    private void deleteProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProActionPerformed
        if (this.selectPosition == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn vật phẩm muốn xóa !");
        } else {
            int index = -1;
            for (int i = 0; i < this.listClothes.size(); i++) {
                if (Integer.parseInt(this.idText.getText()) == this.listClothes.get(i).getId()) {
                    index = i;
                    break;
                }
            }
            String checkedID = "";
            for (int i = 0; i < Detail_Imp_inv_DAO.getInstance().selectAll().size(); i++) {
                if (this.listClothes.get(index).getId() == Detail_Imp_inv_DAO.getInstance().selectAll().get(i).getIdClothes()) {
                    checkedID = "fail";
                    break;
                }
            }
            if (checkedID.compareTo("fail") == 0) {
                JOptionPane.showMessageDialog(rootPane, "Không thể xóa sản phẩm do sản phẩm đang tồn tại trong hóa đơn !");
            } else {
//               Clothes newProduct = new Clothes(Integer.parseInt(this.idText.getText()), this.nameProText.getText(), this.sizeProText.getText(), this.colorProText.getText(), Integer.parseInt(this.priceProText.getText()), Integer.parseInt(this.oldPriceProText.getText()), 0, idArena, idNhom);
                ClothesDAO.getInstance().Delete(this.listClothes.get(index));
                this.listClothes.remove(index);
//                IOfile.writeClothes(this.listClothes);
                this.selectPosition = -1;

                this.idText.setText("");
                this.nameProText.setText("");
                this.sizeProText.setText("");
                this.colorProText.setText("");
                this.priceProText.setText("");
                this.oldPriceProText.setText("");
                this.districtProText.setText("");
                this.groupText.setText("");

                this.showListProduct();
                JOptionPane.showMessageDialog(rootPane, "Xóa thành công !");
            }
        }
    }//GEN-LAST:event_deleteProActionPerformed

    private void searchProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchProActionPerformed
        if (this.searchText.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Nhập tên sản phẩm muốn tìm kiếm !");
        } else {
            ArrayList<Clothes> newList = new ArrayList<>();
            for (int i = 0; i < this.listClothes.size(); i++) {
                if (this.listClothes.get(i).getTenSP().indexOf(this.searchText.getText()) != -1) {
                    newList.add(this.listClothes.get(i));
                }
            }
            this.tableModel.setRowCount(0);
            for (int i = 0; i < newList.size(); i++) {
                this.tableModel.addRow(new Object[]{
                    newList.get(i).getId(),
                    newList.get(i).getTenSP(),
                    newList.get(i).getMau(),
                    newList.get(i).getSize(),
                    newList.get(i).getGiaBan(),
                    newList.get(i).getNameDistrict(AreaDAO.getInstance().selectAll()),
                    newList.get(i).getSLHienTai(),
                    newList.get(i).getGiaGoc(),
                    newList.get(i).getNameGroup(GroupClothesDAO.getInstance().selectAll()),});
            }
        }
    }//GEN-LAST:event_searchProActionPerformed

    private void backToListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToListActionPerformed
        this.searchText.setText("");
        this.showListProduct();
    }//GEN-LAST:event_backToListActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ArrayList<Clothes> lowNumberList = new ArrayList<>();
        for (int i = 0; i < ClothesDAO.getInstance().selectAll().size(); i++) {
            if (ClothesDAO.getInstance().selectAll().get(i).getSLHienTai() <= 30) {
                lowNumberList.add(ClothesDAO.getInstance().selectAll().get(i));
            }
        }
        this.tableModel.setRowCount(0);
        for (int i = 0; i < lowNumberList.size(); i++) {
            this.tableModel.addRow(new Object[]{
                lowNumberList.get(i).getId(),
                lowNumberList.get(i).getTenSP(),
                lowNumberList.get(i).getMau(),
                lowNumberList.get(i).getSize(),
                lowNumberList.get(i).getGiaBan(),
                lowNumberList.get(i).getNameDistrict(AreaDAO.getInstance().selectAll()),
                lowNumberList.get(i).getSLHienTai(),
                lowNumberList.get(i).getGiaGoc(),
                lowNumberList.get(i).getNameGroup(GroupClothesDAO.getInstance().selectAll()),});
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPro;
    private javax.swing.JButton backToList;
    private javax.swing.JTextField colorProText;
    private javax.swing.JButton deletePro;
    private javax.swing.JTextField districtProText;
    private javax.swing.JTextField groupText;
    private javax.swing.JTextField idText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameProText;
    private javax.swing.JTextField numberProText;
    private javax.swing.JTextField oldPriceProText;
    private javax.swing.JTextField priceProText;
    private javax.swing.JTable productTable;
    private javax.swing.JButton searchPro;
    private javax.swing.JTextField searchText;
    private javax.swing.JTextField sizeProText;
    private javax.swing.JButton updatePro;
    // End of variables declaration//GEN-END:variables
}
