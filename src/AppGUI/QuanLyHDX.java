/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppGUI;

import ClassConstructor.*;
import DAO.ClothesDAO;
import DAO.CustomerDAO;
import DAO.Detail_Exp_inv_DAO;
import DAO.Detail_Imp_inv_DAO;
import DAO.EmployeeDAO;
import DAO.ExportInvoiceDAO;
import HandleData.IOfile;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cccccccccccccccccccc
 */
public class QuanLyHDX extends javax.swing.JInternalFrame {

    ArrayList<Clothes> listClothesX;
    ArrayList<HoaDonXuat> listHDX;
    ArrayList<CTDS> listCTDSX;
    ArrayList<CTDS> listCTXClone;
    DefaultTableModel hdxTableModel;
    DefaultTableModel ctdsTableModel;
    int selectPosition = -1;

    NhanVien user;

    public QuanLyHDX(NhanVien user) {
        initComponents();

        this.user = new NhanVien();
        this.user = user;

        this.listClothesX = new ArrayList<>();
        this.listHDX = new ArrayList<>();
        this.listCTDSX = new ArrayList<>();
        this.listCTXClone = new ArrayList<>();

//        this.listClothesX = IOfile.readClothes();
        this.listClothesX = ClothesDAO.getInstance().selectAll();

//        this.listHDX = IOfile.readHDX();
//        this.listCTDSX = IOfile.readCTDS();
        this.listHDX = ExportInvoiceDAO.getInstance().selectAll();
        this.listCTDSX = Detail_Exp_inv_DAO.getInstance().selectAll();
        this.hdxTableModel = (DefaultTableModel) this.hdxTable.getModel();
        this.ctdsTableModel = (DefaultTableModel) this.ctdsTable.getModel();

        this.showListHDX();

        this.hdxTable.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                selectPosition = hdxTable.getSelectedRow();

                idText.setText((String) hdxTableModel.getValueAt(selectPosition, 0));
                dateText.setText((String) hdxTableModel.getValueAt(selectPosition, 1));
                customerText.setText((String) hdxTableModel.getValueAt(selectPosition, 2));
                staffText.setText((String) hdxTableModel.getValueAt(selectPosition, 3));
                ArrayList<CTDS> listClone = new ArrayList<>();
                for (int i = 0; i < Detail_Exp_inv_DAO.getInstance().selectAll().size(); i++) {
                    if (idText.getText().compareTo(Detail_Exp_inv_DAO.getInstance().selectAll().get(i).getIdHD()) == 0) {
                        listClone.add(Detail_Exp_inv_DAO.getInstance().selectAll().get(i));
                    }
                }
                showCTDS(listClone);
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });

    }

    public void showListHDX() {
        this.hdxTableModel.setRowCount(0);
        for (int i = 0; i < ExportInvoiceDAO.getInstance().selectAll().size(); i++) {
            this.hdxTableModel.addRow(new Object[]{
                ExportInvoiceDAO.getInstance().selectAll().get(i).getID(),
                ExportInvoiceDAO.getInstance().selectAll().get(i).getDate(),
                ExportInvoiceDAO.getInstance().selectAll().get(i).getNameCus(CustomerDAO.getInstance().selectAll()),
                ExportInvoiceDAO.getInstance().selectAll().get(i).getNameEmp(EmployeeDAO.getInstance().selectAll()),
                ExportInvoiceDAO.getInstance().selectAll().get(i).getAllMoney(ClothesDAO.getInstance().selectAll(), Detail_Exp_inv_DAO.getInstance().selectAll()),});
        }
    }

    public void showCTDS(ArrayList<CTDS> x) {
        this.ctdsTableModel.setRowCount(0);
        for (int i = 0; i < x.size(); i++) {
            this.ctdsTableModel.addRow(new Object[]{
                x.get(i).getIdClothes(),
                x.get(i).getNameClothes(listClothesX),
                x.get(i).getNumberCount(),
                x.get(i).getMoney(listClothesX),});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hdxTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        dateText = new javax.swing.JTextField();
        customerText = new javax.swing.JTextField();
        staffText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ctdsTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nameProText = new javax.swing.JTextField();
        numberProText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        moreButtton = new javax.swing.JButton();
        addHDButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        searchHDXText = new javax.swing.JTextField();
        searchHDXButton = new javax.swing.JButton();
        resetHDXButton = new javax.swing.JButton();

        setClosable(true);
        setTitle("Quản lý hóa đơn xuất");
        setPreferredSize(new java.awt.Dimension(1096, 731));
        setRequestFocusEnabled(false);

        jLabel1.setText("                     Quản lý hóa đơn xuất");

        hdxTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ngày", "Khách hàng", "Nhân viên lập phiếu", "Tổng tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hdxTable);
        if (hdxTable.getColumnModel().getColumnCount() > 0) {
            hdxTable.getColumnModel().getColumn(0).setResizable(false);
            hdxTable.getColumnModel().getColumn(1).setResizable(false);
            hdxTable.getColumnModel().getColumn(2).setResizable(false);
            hdxTable.getColumnModel().getColumn(3).setResizable(false);
            hdxTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel2.setText("ID:");

        jLabel3.setText("Ngày:");

        jLabel4.setText("Khách hàng:");

        jLabel5.setText("Nhân viện tạo:");

        dateText.setText("dd/mm/yy");

        staffText.setEditable(false);

        ctdsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên SP", "Số lượng", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ctdsTable);
        if (ctdsTable.getColumnModel().getColumnCount() > 0) {
            ctdsTable.getColumnModel().getColumn(0).setResizable(false);
            ctdsTable.getColumnModel().getColumn(1).setResizable(false);
            ctdsTable.getColumnModel().getColumn(2).setResizable(false);
            ctdsTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel6.setText("Tên SP:");

        jLabel7.setText("Số lượng:");

        jLabel8.setText("Chi tiết danh sách SP");

        moreButtton.setText("Tiếp");
        moreButtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreButttonActionPerformed(evt);
            }
        });

        addHDButton.setText("Thêm HĐ");
        addHDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHDButtonActionPerformed(evt);
            }
        });

        backButton.setText("Reset form");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Tìm kiếm theo ngày:");

        searchHDXButton.setText("Tìm");
        searchHDXButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchHDXButtonActionPerformed(evt);
            }
        });

        resetHDXButton.setText("Reset DS");
        resetHDXButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHDXButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(addHDButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(nameProText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numberProText, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(moreButtton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(75, 75, 75)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(staffText, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                            .addComponent(customerText))))
                                .addGap(248, 248, 248)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(searchHDXText, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchHDXButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetHDXButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 978, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(searchHDXText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchHDXButton)
                    .addComponent(resetHDXButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(customerText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(staffText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(nameProText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberProText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moreButtton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addHDButton)
                    .addComponent(backButton))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void moreButttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moreButttonActionPerformed
        if (this.nameProText.getText().length() == 0 || this.numberProText.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Hãy nhập số tên sản phẩm và số lượng !");
        } else {
            int idClothes = 0;
            for (int i = 0; i < ClothesDAO.getInstance().selectAll().size(); i++) {
                if (this.nameProText.getText().replaceAll(" ", "").compareTo(ClothesDAO.getInstance().selectAll().get(i).getTenSP().replaceAll(" ", "")) == 0 && Integer.parseInt(this.numberProText.getText()) <= ClothesDAO.getInstance().selectAll().get(i).getSLHienTai()) {
                    idClothes = ClothesDAO.getInstance().selectAll().get(i).getId();
                    break;
                }
            }
            if (idClothes == 0) {
                JOptionPane.showMessageDialog(rootPane, "Sản phẩm hoặc số lượng không phù hợp !");
            } else {
                CTDS newCT = new CTDS(this.idText.getText(), idClothes, Integer.parseInt(this.numberProText.getText()));
                this.listCTXClone.add(newCT);
                this.showCTDS(this.listCTXClone);

                this.nameProText.setText("");
                this.numberProText.setText("");
                JOptionPane.showMessageDialog(rootPane, "Thêm vào danh sách thành công !");
            }
        }
    }//GEN-LAST:event_moreButttonActionPerformed

    private void addHDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHDButtonActionPerformed
        if (this.idText.getText().length() == 0 || this.dateText.getText().length() == 0 || this.customerText.getText().length() == 0 || this.listCTXClone.size() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Nhập đầy đủ thông tin hóa đơn vào ô trống !");
        } else {
            int idCus = 0;
            for (int i = 0; i < CustomerDAO.getInstance().selectAll().size(); i++) {
                if (this.customerText.getText().compareTo(CustomerDAO.getInstance().selectAll().get(i).getName()) == 0) {
                    idCus = CustomerDAO.getInstance().selectAll().get(i).getID();
                }
            }
            HoaDonXuat newHDX = new HoaDonXuat(this.idText.getText(), this.dateText.getText(), idCus, this.user.getID());
            String checkedHD = "";
            for (int i = 0; i < this.listHDX.size(); i++) {
                if (newHDX.getID().compareTo(this.listHDX.get(i).getID()) == 0) {
                    checkedHD = "Failure";
                    break;
                }
            }
            if (checkedHD.compareTo("Failure") != 0 && newHDX.getCustommerID() != 0) {
                this.listHDX.add(newHDX);
//                IOfile.writeHDX(this.listHDX);
                ExportInvoiceDAO.getInstance().Add(newHDX);

                for (int i = 0; i < this.listCTXClone.size(); i++) {
//                    this.listCTDSX.add(this.listCTXClone.get(i));
                    Detail_Exp_inv_DAO.getInstance().Add(this.listCTXClone.get(i));
                }

//                IOfile.writeClothes(this.listClothesX);
                this.idText.setText("");
                this.customerText.setText("");
                this.dateText.setText("");
                this.staffText.setText("");
                this.listCTXClone.clear();
                this.showListHDX();

                ArrayList<CTDS> cthdx = new ArrayList<>();
                for (int i = 0; i < Detail_Exp_inv_DAO.getInstance().selectAll().size(); i++) {
                    if (newHDX.getID().compareTo(Detail_Exp_inv_DAO.getInstance().selectAll().get(i).getIdHD()) == 0) {
                        cthdx.add(Detail_Exp_inv_DAO.getInstance().selectAll().get(i));
                    }
                }
                for (int i = 0; i < this.listClothesX.size(); i++) {
                    for (int j = 0; j < cthdx.size(); j++) {
                        if (this.listClothesX.get(i).getId() == cthdx.get(j).getIdClothes()) {
                            this.listClothesX.get(i).downNumber(cthdx.get(j).getNumberCount());
                            ClothesDAO.getInstance().Update(this.listClothesX.get(i));
                        }
                    }
                }

                JOptionPane.showMessageDialog(rootPane, "Thêm hóa đơn xuất thành công !");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Khách hàng không tồn tại hoặc ID đã tồn tại !");
            }

        }
    }//GEN-LAST:event_addHDButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.idText.setText("");
        this.customerText.setText("");
        this.dateText.setText("");
        this.staffText.setText("");
        this.nameProText.setText("");
        this.numberProText.setText("");
        this.listCTXClone.clear();
        this.selectPosition = -1;

        this.showCTDS(this.listCTXClone);
        this.showListHDX();
    }//GEN-LAST:event_backButtonActionPerformed

    private void searchHDXButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchHDXButtonActionPerformed
        if (this.searchHDXText.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Nhập ngày của hóa đơn muốn tìm !");
        } else {
            ArrayList<HoaDonXuat> newListHDX = new ArrayList<>();
            for (int i = 0; i < this.listHDX.size(); i++) {
                if (this.listHDX.get(i).getDate().indexOf(this.searchHDXText.getText()) != -1) {
                    newListHDX.add(this.listHDX.get(i));
                }
            }
            this.hdxTableModel.setRowCount(0);
            for (int i = 0; i < newListHDX.size(); i++) {
                this.hdxTableModel.addRow(new Object[]{
                    newListHDX.get(i).getID(),
                    newListHDX.get(i).getDate(),
                    newListHDX.get(i).getNameCus(CustomerDAO.getInstance().selectAll()),
                    newListHDX.get(i).getNameEmp(EmployeeDAO.getInstance().selectAll()),
                    newListHDX.get(i).getAllMoney(listClothesX, listCTDSX),});
            }
        }
    }//GEN-LAST:event_searchHDXButtonActionPerformed

    private void resetHDXButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHDXButtonActionPerformed
        this.showListHDX();
        this.searchHDXText.setText("");
    }//GEN-LAST:event_resetHDXButtonActionPerformed

    public static void main(String[] args) {
                        ArrayList<CTDS> cthdx = new ArrayList<>();
                        System.out.println(ExportInvoiceDAO.getInstance().selectAll());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addHDButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTable ctdsTable;
    private javax.swing.JTextField customerText;
    private javax.swing.JTextField dateText;
    private javax.swing.JTable hdxTable;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton moreButtton;
    private javax.swing.JTextField nameProText;
    private javax.swing.JTextField numberProText;
    private javax.swing.JButton resetHDXButton;
    private javax.swing.JButton searchHDXButton;
    private javax.swing.JTextField searchHDXText;
    private javax.swing.JTextField staffText;
    // End of variables declaration//GEN-END:variables
}
